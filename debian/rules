#! /usr/bin/make -f
# Based on the sample debian/rules that uses debhelper.
# GNU copyright 1997 to 1999 by Joey Hess.

# Uncomment this to turn on verbose mode.
#export DH_VERBOSE=1

# This is the debhelper compatibility version to use.
export DH_COMPAT=3

ifneq (,$(findstring noopt,$(DEB_BUILD_OPTIONS)))
	CFLAGS += -O0
else
	CFLAGS += -O2
endif
ifeq (,$(findstring nostrip,$(DEB_BUILD_OPTIONS)))
	INSTALL_PROGRAM += -s
endif

# These are used for cross-compiling and for saving the configure script
# from having to guess our platform (since we know it already)
DEB_HOST_GNU_TYPE   ?= $(shell dpkg-architecture -qDEB_HOST_GNU_TYPE)
DEB_BUILD_GNU_TYPE  ?= $(shell dpkg-architecture -qDEB_BUILD_GNU_TYPE)

confflags :=	-v

# FHS locations
confflags +=	--prefix=/usr \
		--mandir=\$${prefix}/share/man \
		--infodir=\$${prefix}/share/info

# Compiler, language dialect
confflags +=	--enable-iso-c \
		--enable-compile-warnings=maximum

# Features
confflags +=	--with-gnome

ifeq ($(DEB_BUILD_GNU_TYPE), $(DEB_HOST_GNU_TYPE))
	confflags += --build $(DEB_HOST_GNU_TYPE)
else
	confflags += --build $(DEB_BUILD_GNU_TYPE) --host $(DEB_HOST_GNU_TYPE)
endif

# shared library versions, option 1
#version=1.0.0
#major=1

# option 2, assuming the library is created as src/.libs/libfoo.so.2.0.5 or so
version=`ls gsf/.libs/libgsf*.so.* | \
 awk '{if (match($$0,/[0-9]+\.[0-9]+\.[0-9]+$$/)) print substr($$0,RSTART)}'`
major=`ls gsf/.libs/libgsf*.so.* | \
 awk '{if (match($$0,/\.so\.[0-9]+$$/)) print substr($$0,RSTART+4)}'`

upstreamversion=$(shell dpkg-parsechangelog | grep Version | head -1 | sed -e 's/Version: //g' -e 's/-[A-Za-z0-9\.]*$$//g')

source-updates:
	# Update files/links generated by autotools
	env srcdir=`pwd` NOCONFIGURE=1 sh autogen.sh
	# Replace links by copies of their targets
	for file in `find -type l` ; do \
		tf=`tempfile` && \
		install -p $$file $$tf && \
		rm -f $$file && \
		install -p $$tf $$file && \
		rm -f $$tf ; \
	done
	rm -rf autom4te.cache

configure: config-stamp
config-stamp:
	dh_testdir

	rm -rf build && mkdir build
	cd build && ../configure $(confflags)

	touch config-stamp

build: build-stamp
build-stamp:  config-stamp
	dh_testdir

	$(MAKE) -C build

	touch build-stamp

clean:
	dh_testdir
	dh_testroot
	rm -f config-stamp build-stamp 

	-$(MAKE) -C build distclean
	rm -rf build
	rm -f config.cache config.status

	-find -type f -name 'Makefile.am' | sed -e 's/\.am$$//' | xargs rm -f

	# Update config.{sub,guess} from autotools-dev, if possible.
	-for f in config.sub config.guess ; do \
		if test -r /usr/share/misc/$$f ; then \
			OLDDATE=`./$$f -t | tr -d -` ; \
			NEWDATE=`/usr/share/misc/$$f -t | tr -d -` ; \
			if [ $$OLDDATE -lt $$NEWDATE ] ; then \
				echo "GNU config automated update of $$f (replacing $$OLDDATE with $$NEWDATE)" 1>&2 ; \
				cp -f /usr/share/misc/$$f $$f ; \
			fi; \
		fi; \
	done

	dh_clean

install: build
	dh_testdir
	dh_testroot
	dh_clean -k
	dh_installdirs

	# Add here commands to install the package into debian/tmp
	$(MAKE) -C build \
		DESTDIR=$(CURDIR)/debian/tmp \
		DOC_DIR=$(CURDIR)/debian/tmp/usr/share/doc/libgsf-1-dev \
		install

	@if ! test -r $(CURDIR)/debian/tmp/usr/lib/libgsf-gnome-1.so ; then \
		echo "" ; \
		echo "libgsf-gnome-1 didn't get installed properly" ; \
		echo "Perhaps ltmain.sh needs to be regenerated using a libtool package patched" ; \
		echo "with the \"inst-prefix\" patch?" ; \
		exit 1; \
	fi

# Build architecture-independent files here.
binary-indep: build install
# We have nothing to do by default.

# Build architecture-dependent files here.
binary-arch: build install
	dh_testdir
	dh_testroot
	dh_movefiles

	mv debian/libgsf-1-dev/usr/share/doc/libgsf \
	   debian/libgsf-1-dev/usr/share/doc/libgsf-1-dev

	# Remove files that we don't need in the packages
	rm -f debian/tmp/usr/share/doc/libgsf/html/index.sgml

	# Ensure there are no files left over with which we haven't dealt with
	rmdir `find debian/tmp -type d -depth`

#	dh_installdebconf	
	dh_installdocs
	dh_installexamples
	dh_installmenu
#	dh_installlogrotate
#	dh_installemacsen
#	dh_installpam
#	dh_installmime
#	dh_installinit
	dh_installcron
	dh_installman
	dh_installinfo
#	dh_undocumented
	dh_installchangelogs ChangeLog
	dh_link
	dh_strip
	dh_compress
	dh_fixperms
	dh_makeshlibs -plibgsf-1 -V 'libgsf-1 (>= $(upstreamversion))'
	dh_makeshlibs -plibgsf-gnome-1 -V 'libgsf-gnome-1 (>= $(upstreamversion))'
	dh_installdeb
#	dh_perl
	dh_shlibdeps -l debian/libgsf-1/usr/lib/ -L libgsf-1
	dh_gencontrol
	dh_md5sums
	dh_builddeb

binary: binary-indep binary-arch
.PHONY: source-update configure build clean binary-indep binary-arch binary install 
